{
  "expand": "schema,names",
  "startAt": 0,
  "maxResults": 45,
  "total": 45,
  "issues": [
    {
      "id": "40001",
      "key": "REQ-DOC-001",
      "fields": {
        "summary": "Embedded USB Protocol Stack",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX implements industrial grade embedded USB protocol stack for deeply embedded, real-time, and IoT applications.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "40002",
      "key": "REQ-DOC-002",
      "fields": {
        "summary": "Host Device OTG Support",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX provides comprehensive support for USB host, device, and on-the-go (OTG) operation modes.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "40003",
      "key": "REQ-DOC-003",
      "fields": {
        "summary": "Memory Optimized Architecture",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX maintains remarkably small footprint with automatic scaling based on services used by application.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "40004",
      "key": "REQ-DOC-004",
      "fields": {
        "summary": "Multi Speed USB Protocol",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX supports USB low-speed, full-speed, and high-speed protocols for comprehensive device compatibility.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "40005",
      "key": "REQ-DOC-005",
      "fields": {
        "summary": "Eclipse ThreadX Ecosystem Integration",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX integrates seamlessly with ThreadX RTOS, FileX file system, and NetX Duo TCP/IP stack.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "40006",
      "key": "REQ-DOC-006",
      "fields": {
        "summary": "Comprehensive Host Class Library",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX Host provides extensive class support including HID, CDC, Storage, Audio, Video, and specialized controllers.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "40007",
      "key": "REQ-DOC-007",
      "fields": {
        "summary": "Complete Device Class Implementation",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX Device implements standard USB classes including Audio, CDC, DFU, HID, PIMA, RNDIS, and Storage.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "40008",
      "key": "REQ-DOC-008",
      "fields": {
        "summary": "Vendor Agnostic Controller Support",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX supports major USB controllers from multiple vendors including Atmel, Microchip, NXP, Renesas, ST, and TI.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "40009",
      "key": "REQ-DOC-009",
      "fields": {
        "summary": "USB Standard Compliance",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX supports OHCI and EHCI standards and has been tested with USB IF USBCV tool for specification compliance.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "40010",
      "key": "REQ-DOC-010",
      "fields": {
        "summary": "Pictbridge Protocol Implementation",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX provides complete Pictbridge implementation enabling direct camera-to-printer connectivity via PTP protocol.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "40011",
      "key": "REQ-DOC-011",
      "fields": {
        "summary": "Custom Class Development Framework",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX supports custom class development with DPUMP example class as reference implementation model.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "40012",
      "key": "REQ-DOC-012",
      "fields": {
        "summary": "Consistent API Design Pattern",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX provides intuitive APIs with noun-verb naming convention and consistent ux_host_* and ux_device_* prefixes.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "40013",
      "key": "REQ-DOC-013",
      "fields": {
        "summary": "Real Time System Integration",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX operates as real-time system component with optional thread timeout support for blocking operations.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "40014",
      "key": "REQ-DOC-014",
      "fields": {
        "summary": "TraceX Debug Analysis Support",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX includes system-level trace capabilities via TraceX for comprehensive debugging and analysis.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "40015",
      "key": "REQ-DOC-015",
      "fields": {
        "summary": "Standalone Operation Mode",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX can operate in standalone mode without RTOS for specific classes, providing deployment flexibility.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "40016",
      "key": "REQ-DOC-016",
      "fields": {
        "summary": "Multiple Controller Architecture",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX supports multiple host controllers within same application for complex USB topology management.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "40017",
      "key": "REQ-DOC-017",
      "fields": {
        "summary": "HID Multi Device Protocol",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX HID class provides comprehensive support for keyboard, mouse, and remote control device types.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "40018",
      "key": "REQ-DOC-018",
      "fields": {
        "summary": "Audio Class Dual Version",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX implements both USB Audio 1.0 and 2.0 specifications for comprehensive audio device compatibility.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "40019",
      "key": "REQ-DOC-019",
      "fields": {
        "summary": "RNDIS Network Implementation",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX device RNDIS class enables USB host communication as Ethernet device based on Microsoft implementation.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "40020",
      "key": "REQ-DOC-020",
      "fields": {
        "summary": "DFU Firmware Update Protocol",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX device implements Device Firmware Update (DFU) class for in-field firmware upgrade capabilities.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "40021",
      "key": "REQ-DOC-021",
      "fields": {
        "summary": "PIMA PTP MTP Implementation",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX supports PIMA class with Picture Transfer Protocol (PTP) and Media Transfer Protocol (MTP) functionality.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "40022",
      "key": "REQ-DOC-022",
      "fields": {
        "summary": "CDC Communication Protocol",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX implements CDC-ACM and CDC-ECM classes for serial communication and Ethernet communication respectively.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "40023",
      "key": "REQ-DOC-023",
      "fields": {
        "summary": "Mass Storage Class Integration",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX storage class provides mass storage functionality with FileX integration and SCSI command support.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "40024",
      "key": "REQ-DOC-024",
      "fields": {
        "summary": "Video Class Implementation",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX provides video class support for USB video devices enabling streaming and capture functionality.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "40025",
      "key": "REQ-DOC-025",
      "fields": {
        "summary": "Printer Class Support",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX implements printer class for both host and device enabling USB printing functionality.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "40026",
      "key": "REQ-DOC-026",
      "fields": {
        "summary": "CCID Smart Card Protocol",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX device supports Chip/Smart Card Interface Device (CCID) class for smart card reader functionality.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "40027",
      "key": "REQ-DOC-027",
      "fields": {
        "summary": "Third Party Certification",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX OTG stack has been verified and certified by independent test lab Allion for compliance validation.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "40028",
      "key": "REQ-DOC-028",
      "fields": {
        "summary": "Performance Optimization Features",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX includes optional performance metrics and optimization features for monitoring and tuning system performance.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "40029",
      "key": "REQ-DOC-029",
      "fields": {
        "summary": "Hub Class Management",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX host implements hub class for managing multiple USB devices through hub topology and port management.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "40030",
      "key": "REQ-DOC-030",
      "fields": {
        "summary": "Callback Registration Framework",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX provides comprehensive callback registration system for device activation, deactivation, and data transfer events.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "50001",
      "key": "REQ-CODE-001",
      "fields": {
        "summary": "System Initialization Architecture",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX must provide separate initialization functions for host (_ux_host_stack_initialize) and device (_ux_device_stack_initialize) stacks with memory pool management.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "50002",
      "key": "REQ-CODE-002",
      "fields": {
        "summary": "Error Handling Framework",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX must implement comprehensive error checking with configurable UX_*_ENABLE_ERROR_CHECKING macros and standardized error codes (0x15-0x77 range).",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "50003",
      "key": "REQ-CODE-003",
      "fields": {
        "summary": "Multi-Device Support Configuration",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX must support configurable maximum devices (UX_MAX_DEVICES default 4, max 127) with overflow protection compile-time assertions.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "50004",
      "key": "REQ-CODE-004",
      "fields": {
        "summary": "Thread Stack Size Management",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX must provide configurable thread stack sizes for enumeration (UX_HOST_ENUM_THREAD_STACK_SIZE), HCD (UX_HOST_HCD_THREAD_STACK_SIZE), and class-specific threads.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "50005",
      "key": "REQ-CODE-005",
      "fields": {
        "summary": "USB Class Driver Registration",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX must support registration of multiple USB class drivers with UX_MAX_CLASS_DRIVER limit and 63-character class name length limit.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "50006",
      "key": "REQ-CODE-006",
      "fields": {
        "summary": "Host Controller Driver Support",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX must support multiple HCD types including OHCI, EHCI, STM32, MUSB, PIC32, and simulation host controllers with 32-entry periodic tree structure.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "50007",
      "key": "REQ-CODE-007",
      "fields": {
        "summary": "USB Class Implementation Coverage",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX must implement host classes (HUB, Printer, Storage, HID, Audio, CDC-ACM/DLC/ECM, PIMA, ASIX) and device classes (Storage, CDC-ACM, HID, RNDIS, DFU, Audio, Video, CCID).",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "50008",
      "key": "REQ-CODE-008",
      "fields": {
        "summary": "Descriptor Structure Management",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX must provide structured parsing for all USB descriptor types with predefined byte layouts for device, configuration, interface, endpoint, and class-specific descriptors.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "50009",
      "key": "REQ-CODE-009",
      "fields": {
        "summary": "Standalone Operation Mode",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX must support standalone operation (UX_STANDALONE) that removes RTOS dependencies from both host and device stacks when configured.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "50010",
      "key": "REQ-CODE-010",
      "fields": {
        "summary": "Transfer Request Architecture",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX must implement transfer request queuing system with support for control, bulk, interrupt, and isochronous transfer types.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "50011",
      "key": "REQ-CODE-011",
      "fields": {
        "summary": "Memory Pool Segregation",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX must support separate regular and cache-safe memory pools for DMA-coherent operations on cache-enabled processors.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "50012",
      "key": "REQ-CODE-012",
      "fields": {
        "summary": "USB State Machine Implementation",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX must implement USB state machines with UX_STATE_* definitions including idle, reset, next, wait, exit, and error states.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "50013",
      "key": "REQ-CODE-013",
      "fields": {
        "summary": "Endpoint Management System",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX must provide endpoint descriptor management with configurable endpoint entries, length validation, and endpoint chain updates.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "50014",
      "key": "REQ-CODE-014",
      "fields": {
        "summary": "Trace and Debug Support",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX must implement comprehensive tracing system with UX_TRACE_* events for host/device stack operations, class activities, and error conditions.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "50015",
      "key": "REQ-CODE-015",
      "fields": {
        "summary": "Compile-Time Configuration",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "USBX must support extensive compile-time configuration through ux_user.h with configurable timeouts, buffer sizes, class inclusions, and feature enables.",
        "verifiableByCodeOnly": true
      }
    }
  ]
}